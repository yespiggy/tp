@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":EditNoteCommandParser" as EditNoteCommandParser LOGIC_COLOR
participant "d:EditNoteCommand" as EditNoteCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("editnote 1 1 New note content")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("editnote 1 1 New note content")
activate AddressBookParser

create EditNoteCommandParser
AddressBookParser -> EditNoteCommandParser
activate EditNoteCommandParser

EditNoteCommandParser --> AddressBookParser
deactivate EditNoteCommandParser

AddressBookParser -> EditNoteCommandParser : parse("1 1 New note content")
activate EditNoteCommandParser

create EditNoteCommand
EditNoteCommandParser -> EditNoteCommand
activate EditNoteCommand

EditNoteCommand --> EditNoteCommandParser :
deactivate EditNoteCommand

EditNoteCommandParser --> AddressBookParser : d
deactivate EditNoteCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
EditNoteCommandParser -[hidden]-> AddressBookParser
destroy EditNoteCommandParser

AddressBookParser --> LogicManager : d
deactivate AddressBookParser

LogicManager -> EditNoteCommand : execute(m)
activate EditNoteCommand

EditNoteCommand -> Model : getFilteredStartupList()
activate Model
Model --> EditNoteCommand : lastShownList
deactivate Model

EditNoteCommand -> Model : setStartup(startupToEdit, editedStartup)
activate Model
Model --> EditNoteCommand
deactivate Model

EditNoteCommand -> Model : updateFilteredStartupList(PREDICATE_SHOW_ALL_STARTUPS)
activate Model
Model --> EditNoteCommand
deactivate Model

create CommandResult
EditNoteCommand -> CommandResult : new(String.format(MESSAGE_EDIT_STARTUP_SUCCESS, editedStartup))
activate CommandResult

CommandResult --> EditNoteCommand : r
deactivate CommandResult

EditNoteCommand --> LogicManager : r
deactivate EditNoteCommand

[<-- LogicManager
deactivate LogicManager
@enduml
